{"version":3,"sources":["utils/fetch.js","components/RoverSelect.jsx","utils/formatters.js","components/RoverInfo.jsx","components/SolInfo.jsx","components/PageInfo.jsx","components/NextPrevPageButtons.jsx","components/Photo.jsx","utils/setPickerHint.js","components/LoadingPlaceholders.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["api_key","get","url","a","fetch","fetchResponse","json","data","ok","getManifest","rover","getPhotosBySol","sol","RoverSelect","props","className","rovers","map","i","name","onClick","handleSelectRover","numberWithCommas","x","toString","replace","RoverInfo","launch_date","landing_date","max_date","max_sol","status","toUpperCase","total_photos","onSubmit","handleRequestPhotos","htmlFor","type","id","min","max","value","solPicker","onChange","handleChangeSolInput","required","solPickerHint","SolInfo","solInfo","empty","earth_date","cameras","c","handleFilterCamera","camFilter","PageInfo","slice","sliceEnd","photoSet","length","Math","ceil","photosPerPage","handleChangePhotosPerPage","NextPrevPageButtons","handleLoadMore","Photo","state","loaded","this","onLoad","setState","src","p","img_src","alt","camera","full_name","evt","handleClickLike","style","likes","backgroundColor","color","Component","setPickerHint","roverPhotos","find","e","isNaN","String","fromCharCode","LoadingPlaceholders","Array","from","App","photos","setSliceEnd","dir","resetSliceEnd","numPhotos","parseInt","target","photo_manifest","preventDefault","loading","newPhotoSet","filter","newLikes","href","to","spy","smooth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sYAAMA,EAAU,2C,SAEDC,E,8EAAf,WAAmBC,GAAnB,iBAAAC,EAAA,sEAC8BC,MAAMF,GADpC,cACQG,EADR,gBAEmBA,EAAcC,OAFjC,UAEMC,EAFN,OAGOF,EAAcG,GAHrB,sBAG+BD,EAH/B,gCAISA,GAJT,4C,sBAOO,SAAeE,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAP,EAAA,6DACCD,EADD,4DAC4DQ,EAD5D,qBAC8EV,GAD9E,SAEcC,EAAIC,GAFlB,cAECK,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeI,EAAtB,oC,4CAAO,WAA8BD,EAAOE,GAArC,iBAAAT,EAAA,6DACCD,EADD,yDACyDQ,EADzD,uBAC6EE,EAD7E,oBAC4FZ,GAD5F,SAEcC,EAAIC,GAFlB,cAECK,EAFD,yBAGEA,GAHF,4C,+DCbQ,SAASM,EAAYC,GAClC,OACE,gCACE,gDACA,oBAAIC,UAAU,aAAd,SACGD,EAAME,OAAOC,KAAI,SAACP,EAAMQ,GAAP,OAChB,oBACEH,UAAWL,IAAQI,EAAMJ,MAAMS,KAAO,UAAU,GAEhDC,QAAS,kBAAIN,EAAMO,kBAAkBX,IAHvC,SAKGA,GAHIQ,W,MCVjB,SAASI,EAAiBC,GACxB,OAAOA,EAAEC,WAAWC,QAAQ,kCAAmC,KCElD,SAASC,EAAUZ,GAChC,OACE,mCACGA,EAAMJ,MAAMS,MACX,gCACE,6BAAKL,EAAMJ,MAAMS,OACjB,+BACE,+CACE,6BAAKL,EAAMJ,MAAMiB,cACnB,gDACE,6BAAKb,EAAMJ,MAAMkB,eACnB,0DACE,6BAAKd,EAAMJ,MAAMmB,WACnB,6BAAI,uFACF,6BAAKP,EAAiBR,EAAMJ,MAAMoB,WACpC,0CACE,6BAAKhB,EAAMJ,MAAMqB,OAAOC,gBAC1B,gDACE,6BAAKV,EAAiBR,EAAMJ,MAAMuB,mBAGtC,uBAAMC,SAAUpB,EAAMqB,oBAAtB,UACE,uBAAOC,QAAQ,YAAf,sCACA,iCACE,uBACEC,KAAK,SACLC,GAAG,YACHnB,KAAK,YACLoB,IAAI,IACJC,IAAK1B,EAAMJ,MAAMoB,QACjBW,MAAO3B,EAAM4B,UACbC,SAAU7B,EAAM8B,qBAChBC,UAAQ,IAEV,wBAAQ9B,UAAU,WAAWsB,KAAK,SAAlC,sBAGJ,4BAAIvB,EAAMgC,qBCtCL,SAASC,EAAQjC,GAC9B,OACE,mCACwB,kBAAdA,EAAMF,KACZ,gCACE,sCAASE,EAAMF,OACdE,EAAMkC,QAAQC,MACb,yDAEA,qCACE,6CAAe,+BAAOnC,EAAMkC,QAAQE,gBACpC,+CAAiB,+BAAO5B,EAAiBR,EAAMkC,QAAQf,mBACvD,iDACiB,uBADjB,uBAIA,oBAAIlB,UAAU,UAAd,SACGD,EAAMkC,QAAQG,QAAQlC,KAAI,SAACmC,EAAElC,GAAH,OACzB,oBAEEE,QAAS,kBAAIN,EAAMuC,mBAAmBD,IACtCrC,UAAWqC,IAAItC,EAAMwC,UAAY,UAAU,GAH7C,SAKGF,GAJIlC,gB,MCnBV,SAASqC,EAASzC,GAC/B,OACE,oBAAGC,UAAU,YAAb,UACE,yCAAYD,EAAMF,IAAlB,OACCE,EAAMwC,UACL,+CAAkBxC,EAAMwC,UAAxB,OACE,GAEJ,8CAAiBxC,EAAM0C,MAAM,EAA7B,MAAmC1C,EAAM2C,SAAzC,OAAuD3C,EAAM4C,SAASC,OAAtE,OACA,4CAAeC,KAAKC,KAAK/C,EAAM2C,SAAW3C,EAAMgD,eAAhD,IAAiEF,KAAKC,KAAK/C,EAAM4C,SAASC,OAAS7C,EAAMgD,eAAzG,OACA,uCAAS,uBAAO1B,QAAQ,gBAAf,+BACP,uBACEC,KAAK,SACLM,SAAU7B,EAAMiD,0BAChBtB,MAAO3B,EAAMgD,cACbvB,IAAK,EACLC,IAAK,IACLrB,KAAK,gBACLmB,GAAG,gBACHO,UAAQ,UCrBH,SAASmB,EAAoBlD,GAC1C,OACE,qCACGA,EAAM0C,MAAQ,GACb,wBAAQpC,QAAS,kBAAIN,EAAMmD,gBAAgB,IAA3C,2BAEDnD,EAAM2C,WAAa3C,EAAM4C,SAASC,QACjC,wBAAQvC,QAAS,kBAAIN,EAAMmD,eAAe,IAA1C,0B,UCJaC,E,4MAEnBC,MAAQ,CACNC,QAAQ,G,4CAGV,WAAS,IAAD,OACN,OACE,+BACE,yBAAQrD,UAAWsD,KAAKF,MAAMC,OAAS,KAAO,UAA9C,UACE,qBACEE,OAAQ,kBAAM,EAAKC,SAAS,CAACH,QAAQ,KACrCI,IAAKH,KAAKvD,MAAM2D,EAAEC,QAClBC,IAAG,qBAAgBN,KAAKvD,MAAMJ,MAAMS,KAAjC,qBAAkDkD,KAAKvD,MAAM2D,EAAEnC,GAA/D,wBAAiF+B,KAAKvD,MAAM2D,EAAEG,OAAOC,UAArG,eAAqHR,KAAKvD,MAAM2D,EAAEvB,cAEvI,uCACE,uCAAUmB,KAAKvD,MAAM2D,EAAEnC,MACvB,2CAAc+B,KAAKvD,MAAM2D,EAAEG,OAAOC,aAClC,+CAAkBR,KAAKvD,MAAM2D,EAAEvB,oBAGnC,wBAAQ9B,QAAU,SAAA0D,GAAG,OAAI,EAAKhE,MAAMiE,gBAAgB,EAAKjE,MAAM2D,EAAEnC,KAAM0C,MAAOX,KAAKvD,MAAMmE,MAAMZ,KAAKvD,MAAM2D,EAAEnC,IAAM,CAAC4C,gBAAgB,OAAQC,MAAM,SAAW,GAA5J,SACGd,KAAKvD,MAAMmE,MAAMZ,KAAKvD,MAAM2D,EAAEnC,IAAM,SAAW,gB,GAtBvB8C,aCHpB,SAASC,EAAcC,EAAa1E,GAEjD,IAAMoC,EAAUsC,EAAYC,MAAK,SAAAC,GAAC,OAAIA,EAAE5E,MAAQA,KAChD,OAAI6E,MAAM7E,GACD8E,OAAOC,aAAa,KAEN,qBAAZ3C,EACH,sBAAN,OAA6BpC,GAGvB,GAAN,OAAUoC,EAAQf,aAAlB,4BAAkDrB,G,MCRvC,SAAUgF,EAAoB9E,GAC3C,OACE,6BACG+E,MAAMC,KAAKD,MAAM/E,EAAMgD,gBAAgB7C,KAAI,SAACwD,EAAEvD,GAAH,OAC1C,qBAAYH,UAAU,UAAtB,UACE,wBACA,wBACA,wBACA,wBACA,0BALOG,Q,ICQI6E,E,4MAEnB5B,MAAQ,CACNnD,OAAQ,CAAC,YAAY,eAAe,cAAc,UAClDN,MAAM,CACJS,KAAK,GACLS,aAAa,GACbD,YAAY,GACZE,SAAS,GACTC,QAAQ,GACRkE,OAAO,GACPjE,OAAO,GACPE,aAAa,IAEfe,QAAQ,CAACC,OAAM,GACfP,UAAU,EACVI,cAAc,GACdlC,IAAI,GACJoF,OAAO,GACPtC,SAAS,GACTJ,UAAU,GACVE,MAAM,EACNyB,MAAM,GACNnB,cAAc,G,EAGhBmC,YAAc,SAACC,GACb,OAAO,EAAK/B,MAAMV,SAAY,EAAKU,MAAML,cAAgBoC,EAAO,EAAK/B,MAAMT,SAASC,OAC1E,EAAKQ,MAAMT,SAASC,OACpB,EAAKQ,MAAMV,SAAY,EAAKU,MAAML,cAAgBoC,G,EAG9DC,cAAgB,SAACC,GACf,OAAO,EAAKjC,MAAML,cAAgBsC,EACxBA,EACA,EAAKjC,MAAML,e,EAGvBlB,qBAAuB,SAACkC,GAAS,IAAD,EACxBlE,EAAMyF,SAASvB,EAAIwB,OAAO7D,OAChC,EAAK8B,UAAL,mBACGO,EAAIwB,OAAOnF,KAAOP,GADrB,8BAEiByE,EAAc,EAAKlB,MAAMzD,MAAMsF,OAAQpF,IAFxD,K,EAMFmD,0BAA4B,SAACe,GAAS,IAAD,EAC7BhB,EAAgBuC,SAASvB,EAAIwB,OAAO7D,OACtCgD,MAAM3B,IACV,EAAKS,UAAL,mBACGO,EAAIwB,OAAOnF,KAAO2C,GADrB,sBAES,GAFT,yBAGY,EAAKqC,cAAc,EAAKhC,MAAMT,SAASC,SAHnD,K,EAOFtC,kB,uCAAoB,WAAOX,GAAP,eAAAP,EAAA,sEACCM,EAAYC,GADb,OACZH,EADY,OAElB,EAAKgE,SAAS,CACZ7D,MAAMH,EAAKgG,eACXP,OAAO,GACPtC,SAAS,GACTF,MAAM,EACN5C,IAAI,GACJ0C,UAAU,GACVR,cAAeuC,EAAc9E,EAAKgG,eAAeP,OAAQ,EAAK7B,MAAMzB,aATpD,2C,wDAapBP,oB,uCAAsB,WAAO2C,GAAP,iBAAA3E,EAAA,yDACpB2E,EAAI0B,iBACJ,EAAKjC,SAAS,CACZ3D,IAAK,EAAKuD,MAAMzB,YAGK,qBADjBM,EAAU,EAAKmB,MAAMzD,MAAMsF,OAAOT,MAAK,SAAAC,GAAC,OAAIA,EAAE5E,MAAQ,EAAKuD,MAAMzB,cALnD,gBAOlB,EAAK6B,SAAS,CACZvB,QAAS,CAACC,OAAO,GACjB+C,OAAO,KATS,8BAalB,EAAKzB,SAAS,CACZvB,QAAQ,aACNC,OAAO,GACJD,GAELyD,SAAS,IAlBO,UAqBD9F,EAAe,EAAKwD,MAAMzD,MAAMS,KAAM,EAAKgD,MAAMvD,KArBhD,YAqBdL,EArBc,QAwBToD,SAAW,EAAKQ,MAAMnB,QAAQf,aAxBrB,kCAyBHtB,EAAe,EAAKwD,MAAMzD,MAAMS,KAAM,EAAKgD,MAAMvD,KAzB9C,QAyBhBL,EAzBgB,eA2BlB,EAAKgE,SAAS,CACZkC,SAAS,EACTT,OAAQzF,EAAKyF,OACbtC,SAAUnD,EAAKyF,OACf1C,UAAU,GACVE,MAAM,EACNC,SAAU,EAAK0C,cAAc5F,EAAKyF,OAAOrC,UAjCzB,4C,wDAsCtBN,mBAAqB,SAACuB,GACpB,GAAIA,IAAW,EAAKT,MAAMb,UACxB,EAAKiB,SAAS,CACZb,SAAU,EAAKS,MAAM6B,OACrB1C,UAAW,GACXE,MAAM,EACNC,SAAU,EAAK0C,cAAc,EAAKhC,MAAM6B,OAAOrC,cAG/C,CACF,IAAM+C,EAAc,EAAKvC,MAAM6B,OAAOW,QAAO,SAAAlC,GAAC,OAAIA,EAAEG,OAAOzD,OAASyD,KACpE,EAAKL,SAAS,CACZb,SAAUgD,EACVpD,UAAWsB,EACXpB,MAAM,EACNC,SAAU,EAAK0C,cAAcO,EAAY/C,Y,EAM/CM,eAAiB,SAACiC,GACZ,EAAK/B,MAAMV,WAAa,EAAKU,MAAMT,SAASC,OAC9C,EAAKY,SAAS,CACZf,MAAO,EAAKW,MAAMX,MAAQ,EAAKW,MAAML,cACrCL,SAAU,EAAKU,MAAMX,QAIvB,EAAKe,SAAS,CACZf,MAAO,EAAKW,MAAMX,MAAS,EAAKW,MAAML,cAAgBoC,EACtDzC,SAAU,EAAKwC,YAAYC,M,EAKjCnB,gBAAkB,SAACzC,GACjB,IAAMsE,EAAW,EAAKzC,MAAMc,MAC5B2B,EAAStE,IAAOsE,EAAStE,GACzB,EAAKiC,SAAS,CACZU,MAAM2B,K,4CAIV,WAAS,IAAD,OACN,OACE,gCACE,8CACA,uFACA,oCAAM,mBAAGC,KAAK,sBAAR,4BACN,mCACE,cAAC,EAAD,2BACMxC,KAAKF,OADX,IAEE9C,kBAAmBgD,KAAKhD,qBAE1B,cAAC,EAAD,2BACMgD,KAAKF,OADX,IAEEhC,oBAAqBkC,KAAKlC,oBAC1BS,qBAAsByB,KAAKzB,wBAE7B,cAACG,EAAD,aACEM,mBAAoBgB,KAAKhB,oBACrBgB,KAAKF,WAIb,uBAAM7B,GAAG,OAAT,UACG+B,KAAKF,MAAMT,SAASC,OAAS,GAC5B,qCACE,cAAC,EAAD,2BAAcU,KAAKF,OAAnB,IAA0BJ,0BAA2BM,KAAKN,6BAC1D,cAACC,EAAD,2BAAyBK,KAAKF,OAA9B,IAAqCF,eAAgBI,KAAKJ,qBAG3DI,KAAKF,MAAMsC,QACV,cAAC,EAAD,eAAyBpC,KAAKF,QAE9B,cAAC,IAAD,UACE,6BACGE,KAAKF,MAAMT,SAASF,MAAMa,KAAKF,MAAMX,MAAOa,KAAKF,MAAMV,UAAUxC,KAAK,SAAAwD,GAAC,OACtE,cAAC,EAAD,2BAAsB,EAAKN,OAA3B,IAAkCM,EAAGA,EAAGM,gBAAiB,EAAKA,kBAAlDN,EAAEnC,WAKvB+B,KAAKF,MAAMT,SAASC,OAAS,GAC5B,cAAC,OAAD,CAAOmD,GAAG,OAAOC,KAAK,EAAOC,QAAQ,EAArC,SACE,cAAChD,EAAD,2BAAyBK,KAAKF,OAA9B,IAAqCF,eAAgBI,KAAKJ,8B,GAjMvCmB,aCFlB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1aab57ce.chunk.js","sourcesContent":["const api_key = 'fUwiBPvvBwZXfky5QXVrVsSlOmRHlLQXnnZv03dI'\n\nasync function get(url){\n  const fetchResponse = await fetch(url)\n  let data = await fetchResponse.json();\n  if (!fetchResponse.ok) throw data;\n  return data;\n}\n\nexport async function getManifest(rover){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/manifests/${rover}/?api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}\n\nexport async function getPhotosBySol(rover, sol){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}","import \"./RoverSelect.css\"\n\nexport default function RoverSelect(props){\n  return(\n    <div>\n      <h2>Select a rover</h2>\n      <ul className=\"rover-list\">\n        {props.rovers.map((rover,i)=>(\n          <li \n            className={rover===props.rover.name ? 'current':''} \n            key={i} \n            onClick={()=>props.handleSelectRover(rover)}\n          >\n            {rover}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}","function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport {numberWithCommas}","import './RoverInfo.css'\nimport { numberWithCommas } from \"../utils/formatters\"\n\nexport default function RoverInfo(props){\n  return(\n    <>\n      {props.rover.name && \n        <div>\n          <h2>{props.rover.name}</h2>\n          <dl>\n            <dt>Launch date: </dt>\n              <dd>{props.rover.launch_date}</dd>\n            <dt>Landing date: </dt>\n              <dd>{props.rover.landing_date}</dd>\n            <dt>Latest day with photos: </dt>\n              <dd>{props.rover.max_date}</dd>\n            <dt><div>Last Martian day (Sol) since landing with photos: </div></dt>\n              <dd>{numberWithCommas(props.rover.max_sol)}</dd>\n            <dt>Status: </dt>\n              <dd>{props.rover.status.toUpperCase()}</dd>\n            <dt>Total Photos: </dt>\n              <dd>{numberWithCommas(props.rover.total_photos)}</dd>\n          </dl>\n\n          <form onSubmit={props.handleRequestPhotos}>\n            <label htmlFor=\"solPicker\">Show me photos from Sol:</label>\n            <span>\n              <input \n                type=\"number\" \n                id=\"solPicker\"\n                name=\"solPicker\" \n                min=\"0\" \n                max={props.rover.max_sol} \n                value={props.solPicker} \n                onChange={props.handleChangeSolInput} \n                required \n              />\n              <button className=\"bg-white\" type=\"submit\">Go</button>\n            </span>\n          </form>\n          <p>{props.solPickerHint}</p>\n        </div>\n      }\n    </>\n  )\n}","import { numberWithCommas } from \"../utils/formatters\"\n\nexport default function SolInfo(props){\n  return(\n    <>\n      {typeof props.sol === 'number' &&\n        <div>\n          <h2>Sol {props.sol}</h2>\n          {props.solInfo.empty ? \n            <p>No photos from this date</p> \n          : \n            <>\n              <p>Earth Date: <span>{props.solInfo.earth_date}</span></p>\n              <p>Total Photos: <span>{numberWithCommas(props.solInfo.total_photos)}</span></p>\n              <h3>\n                Cameras in use:<br/>\n                (Click to filter)\n              </h3>\n              <ul className=\"cameras\">\n                {props.solInfo.cameras.map((c,i) => (\n                  <li \n                    key={i} \n                    onClick={()=>props.handleFilterCamera(c)}\n                    className={c===props.camFilter ? 'current':''} \n                  >\n                    {c}\n                  </li>\n                ))}\n              </ul>\n            </>\n          }\n        </div>\n      }\n    </>\n  )\n}","import './PageInfo.css'\n\nexport default function PageInfo(props) {\n  return(\n    <p className=\"page-info\">\n      <span> Sol {props.sol} </span> \n      {props.camFilter ? \n        <span> | Camera: {props.camFilter} </span> \n        : ''\n      }\n      <span> | Photos {props.slice+1} - {props.sliceEnd} of {props.photoSet.length} </span>\n      <span> | Page {Math.ceil(props.sliceEnd / props.photosPerPage)}/{Math.ceil(props.photoSet.length / props.photosPerPage)} </span>\n      <span> | <label htmlFor=\"photosPerPage\">Photos per page: </label>\n        <input \n          type=\"number\"\n          onChange={props.handleChangePhotosPerPage} \n          value={props.photosPerPage} \n          min={1} \n          max={999}\n          name=\"photosPerPage\" \n          id=\"photosPerPage\"\n          required\n        /></span>\n    </p>\n  )\n}","export default function NextPrevPageButtons(props){\n  return(\n    <>\n      {props.slice > 0 && \n        <button onClick={()=>props.handleLoadMore(-1)}>Previous page</button>\n      }\n      {props.sliceEnd !== props.photoSet.length && \n        <button onClick={()=>props.handleLoadMore(1)}>Next page</button>\n      } \n    </>\n  )\n}","import { Component } from \"react\";\nimport './Photo.css';\n\nexport default class Photo extends Component{\n\n  state = {\n    loaded: false\n  }\n\n  render(){\n    return(\n      <li>\n        <figure className={this.state.loaded ? null : 'loading'}>\n          <img \n            onLoad={() => this.setState({loaded: true})}\n            src={this.props.p.img_src} \n            alt={`Mars rover ${this.props.rover.name} photo id ${this.props.p.id}, taken with ${this.props.p.camera.full_name} on ${this.props.p.earth_date}`}\n          />\n          <figcaption>\n            <div>ID: {this.props.p.id}</div>\n            <div>Camera: {this.props.p.camera.full_name}</div>\n            <div>Earth Date: {this.props.p.earth_date}</div>\n          </figcaption>\n        </figure>\n        <button onClick={ evt => this.props.handleClickLike(this.props.p.id) } style={this.props.likes[this.props.p.id] ? {backgroundColor:\"pink\", color:\"black\"} : {} }>\n          {this.props.likes[this.props.p.id] ? \"Unlike\" : \"Like\"}\n        </button>\n      </li>\n    )\n  }\n}","export default function setPickerHint(roverPhotos, sol){\n\n  const solInfo = roverPhotos.find(e => e.sol === sol)\n  if (isNaN(sol)){\n    return String.fromCharCode(160)\n  }\n  if (typeof solInfo === 'undefined'){\n    return `No photos from Sol ${sol}`\n  }\n  else{\n    return `${solInfo.total_photos} photos from Sol ${sol}`\n  }\n}","import \"./LoadingPlaceholders.css\"\n\nexport default function  LoadingPlaceholders(props) {\n  return(\n    <ul>\n      {Array.from(Array(props.photosPerPage)).map((p,i)=>(\n        <li key={i} className=\"loading\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </li>\n      ))}\n    </ul>\n  )\n}","import { Component } from \"react\";\nimport { getManifest, getPhotosBySol } from \"./utils/fetch\";\nimport {Link} from 'react-scroll'\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport './App.css';\nimport RoverSelect from \"./components/RoverSelect\";\nimport RoverInfo from \"./components/RoverInfo\";\nimport SolInfo from \"./components/SolInfo\";\nimport PageInfo from \"./components/PageInfo\";\nimport NextPrevPageButtons from \"./components/NextPrevPageButtons\";\nimport Photo from \"./components/Photo\";\nimport setPickerHint from \"./utils/setPickerHint\";\nimport LoadingPlaceholders from \"./components/LoadingPlaceholders\";\n\nexport default class App extends Component{\n\n  state = {\n    rovers: ['Curiosity','Perseverance','Opportunity','Spirit'],\n    rover:{\n      name:'',\n      landing_date:'',\n      launch_date:'',\n      max_date:'',\n      max_sol:'',\n      photos:[],\n      status:'',\n      total_photos:'',\n    },\n    solInfo:{empty:true},\n    solPicker:0,\n    solPickerHint:\"\",\n    sol:'',\n    photos:[],\n    photoSet:[],\n    camFilter:\"\",\n    slice:0,\n    likes:{},\n    photosPerPage:8\n  }\n\n  setSliceEnd = (dir) => {\n    return this.state.sliceEnd + (this.state.photosPerPage * dir) > this.state.photoSet.length ? \n              this.state.photoSet.length \n            : this.state.sliceEnd + (this.state.photosPerPage * dir)\n  }\n\n  resetSliceEnd = (numPhotos) =>{\n    return this.state.photosPerPage > numPhotos ? \n              numPhotos \n            : this.state.photosPerPage\n  }\n\n  handleChangeSolInput = (evt) => {\n    const sol = parseInt(evt.target.value)\n    this.setState({\n      [evt.target.name]: sol,\n      solPickerHint: setPickerHint(this.state.rover.photos, sol)\n    });\n  }\n\n  handleChangePhotosPerPage = (evt) => {\n    const photosPerPage = parseInt(evt.target.value)\n    if (isNaN(photosPerPage)) return\n    this.setState({\n      [evt.target.name]: photosPerPage,\n      slice: 0,\n      sliceEnd: this.resetSliceEnd(this.state.photoSet.length)\n    });\n  }\n\n  handleSelectRover = async (rover) => {\n    const data = await getManifest(rover)\n    this.setState({\n      rover:data.photo_manifest,\n      photos:[],\n      photoSet:[],\n      slice:0,\n      sol:'',\n      camFilter:'',\n      solPickerHint: setPickerHint(data.photo_manifest.photos, this.state.solPicker)\n    })\n  }\n\n  handleRequestPhotos = async (evt) => {\n    evt.preventDefault();\n    this.setState({\n      sol: this.state.solPicker\n    })\n    const solInfo = this.state.rover.photos.find(e => e.sol === this.state.solPicker)\n    if (typeof solInfo === 'undefined'){\n      this.setState({\n        solInfo: {empty: true},\n        photos:[]\n      })\n    }\n    else{\n      this.setState({\n        solInfo: {\n          empty: false,\n          ...solInfo\n        },\n        loading: true\n      })\n\n      let data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      // For some reason, the API sometimes gives back an empty object when it ought not too\n      // In these cases, just try it one more time\n      if (data.length !== this.state.solInfo.total_photos){\n        data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      }\n      this.setState({\n        loading: false,\n        photos: data.photos,\n        photoSet: data.photos,\n        camFilter:'',\n        slice:0,\n        sliceEnd: this.resetSliceEnd(data.photos.length)\n      })\n    }\n  }\n\n  handleFilterCamera = (camera) => {\n    if (camera === this.state.camFilter){\n      this.setState({\n        photoSet: this.state.photos,\n        camFilter: \"\",\n        slice:0,\n        sliceEnd: this.resetSliceEnd(this.state.photos.length)\n      })\n    }\n    else{\n      const newPhotoSet = this.state.photos.filter(p => p.camera.name === camera)\n      this.setState({\n        photoSet: newPhotoSet,\n        camFilter: camera,\n        slice:0,\n        sliceEnd: this.resetSliceEnd(newPhotoSet.length)\n      })\n    }\n    \n  }\n\n  handleLoadMore = (dir) => {\n    if (this.state.sliceEnd === this.state.photoSet.length){\n      this.setState({\n        slice: this.state.slice - this.state.photosPerPage,\n        sliceEnd: this.state.slice\n      })\n    }\n    else{\n      this.setState({\n        slice: this.state.slice + (this.state.photosPerPage * dir),\n        sliceEnd: this.setSliceEnd(dir)\n      })\n    }\n  }\n\n  handleClickLike = (id) => {\n    const newLikes = this.state.likes\n    newLikes[id] = !newLikes[id]\n    this.setState({\n      likes:newLikes\n    })\n  }\n\n  render(){ \n    return(\n      <div>\n        <h1>Spacestagram</h1>\n        <p>A fun little React app for exploring Mars Rover photos</p>\n        <p>by <a href=\"https://fraser.page\">Fraser Page</a></p>\n        <header>\n          <RoverSelect \n            {...this.state} \n            handleSelectRover={this.handleSelectRover}\n          />\n          <RoverInfo\n            {...this.state}\n            handleRequestPhotos={this.handleRequestPhotos}\n            handleChangeSolInput={this.handleChangeSolInput}\n          />\n          <SolInfo \n            handleFilterCamera={this.handleFilterCamera}\n            {...this.state}\n          />\n        </header>\n        \n        <main id=\"main\">\n          {this.state.photoSet.length > 0 && \n            <>\n              <PageInfo {...this.state} handleChangePhotosPerPage={this.handleChangePhotosPerPage} />\n              <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n            </>\n          }\n            {this.state.loading ?\n              <LoadingPlaceholders {...this.state}/>\n            : \n              <SRLWrapper>\n                <ul>\n                  {this.state.photoSet.slice(this.state.slice, this.state.sliceEnd).map( p => (\n                    <Photo key={p.id} {...this.state} p={p} handleClickLike={this.handleClickLike}/>\n                  ))}\n                </ul>\n              </SRLWrapper>\n            }\n          {this.state.photoSet.length > 0 && \n            <Link  to=\"main\" spy={false} smooth={true}>\n              <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n            </Link>\n          }\n        </main>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SimpleReactLightbox from 'simple-react-lightbox'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleReactLightbox>\n      <App />\n    </SimpleReactLightbox>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}