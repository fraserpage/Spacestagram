{"version":3,"sources":["utils/fetch.js","components/RoverSelect.jsx","components/RoverInfo.jsx","components/SolInfo.jsx","components/NextPrevPageButtons.jsx","components/Photo.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["api_key","get","url","a","fetch","fetchResponse","json","data","ok","getManifest","rover","getPhotosBySol","sol","RoverSelect","props","className","rovers","map","i","name","onClick","handleSelectRover","RoverInfo","launch_date","landing_date","max_date","max_sol","status","total_photos","onSubmit","handleRequestPhotos","htmlFor","type","id","min","max","value","solPicker","onChange","handleChange","required","SolInfo","solInfo","empty","earth_date","cameras","c","NextPrevPageButtons","slice","handleLoadMore","sliceEnd","Photo","state","loaded","this","onLoad","setState","src","p","img_src","alt","camera","full_name","evt","handleClickLike","style","likes","backgroundColor","color","Component","App","photos","photosPerPage","target","parseInt","preventDefault","find","e","loading","length","dir","photo_manifest","newLikes","Math","ceil","Array","from","to","spy","smooth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAAMA,EAAU,2C,SAEDC,E,8EAAf,WAAmBC,GAAnB,iBAAAC,EAAA,sEAC8BC,MAAMF,GADpC,cACQG,EADR,gBAEmBA,EAAcC,OAFjC,UAEMC,EAFN,OAGOF,EAAcG,GAHrB,sBAG+BD,EAH/B,gCAISA,GAJT,4C,sBAOO,SAAeE,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAP,EAAA,6DACCD,EADD,4DAC4DQ,EAD5D,qBAC8EV,GAD9E,SAEcC,EAAIC,GAFlB,cAECK,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeI,EAAtB,oC,4CAAO,WAA8BD,EAAOE,GAArC,iBAAAT,EAAA,6DACCD,EADD,yDACyDQ,EADzD,uBAC6EE,EAD7E,oBAC4FZ,GAD5F,SAEcC,EAAIC,GAFlB,cAECK,EAFD,yBAGEA,GAHF,4C,uDCbQ,SAASM,EAAYC,GAClC,OACE,gCACE,gDACA,oBAAIC,UAAU,aAAd,SACGD,EAAME,OAAOC,KAAI,SAACP,EAAMQ,GAAP,OAChB,oBACEH,UAAWL,IAAQI,EAAMJ,MAAMS,KAAO,UAAU,GAEhDC,QAAS,kBAAIN,EAAMO,kBAAkBX,IAHvC,SAKGA,GAHIQ,WCVF,SAASI,EAAUR,GAChC,OACE,mCACGA,EAAMJ,MAAMS,MACX,gCACE,6BAAKL,EAAMJ,MAAMS,OACjB,8CAAgB,+BAAOL,EAAMJ,MAAMa,iBACnC,+CAAiB,+BAAOT,EAAMJ,MAAMc,kBACpC,yDAA2B,+BAAOV,EAAMJ,MAAMe,cAC9C,kEAAoC,+BAAOX,EAAMJ,MAAMgB,aACvD,yCAAW,+BAAOZ,EAAMJ,MAAMiB,YAC9B,+CAAiB,+BAAOb,EAAMJ,MAAMkB,kBAEpC,uBAAMC,SAAUf,EAAMgB,oBAAtB,UACE,uBAAOC,QAAQ,YAAf,0CACA,iCACE,uBACEC,KAAK,SACLC,GAAG,YACHd,KAAK,YACLe,IAAI,IACJC,IAAKrB,EAAMJ,MAAMgB,QACjBU,MAAOtB,EAAMuB,UACbC,SAAUxB,EAAMyB,aAChBC,UAAQ,IAEV,wBAAQzB,UAAU,WAAWiB,KAAK,SAAlC,2BC1BC,SAASS,EAAQ3B,GAC9B,OACE,mCACwB,kBAAdA,EAAMF,KACZ,gCACE,sCAASE,EAAMF,OACdE,EAAM4B,QAAQC,MACb,yDAEA,qCACE,6CAAe,+BAAO7B,EAAM4B,QAAQE,gBACpC,+CAAiB,+BAAO9B,EAAM4B,QAAQd,kBACtC,iDACA,6BACGd,EAAM4B,QAAQG,QAAQ5B,KAAI,SAAC6B,EAAE5B,GAAH,OACzB,6BAAa4B,GAAJ5B,gBCfZ,SAAS6B,EAAoBjC,GAC1C,OACE,qCACGA,EAAMkC,MAAQ,GACb,wBAAQ5B,QAAS,kBAAIN,EAAMmC,gBAAgB,IAA3C,2BAEDnC,EAAMoC,WAAapC,EAAM4B,QAAQd,cAChC,wBAAQR,QAAS,kBAAIN,EAAMmC,eAAe,IAA1C,0B,UCJaE,E,4MAEnBC,MAAQ,CACNC,QAAQ,G,4CAGV,WAAS,IAAD,OACN,OACE,+BACE,yBAAQtC,UAAWuC,KAAKF,MAAMC,OAAS,KAAO,UAA9C,UACE,qBACEE,OAAQ,kBAAM,EAAKC,SAAS,CAACH,QAAQ,KACrCI,IAAKH,KAAKxC,MAAM4C,EAAEC,QAClBC,IAAG,qBAAgBN,KAAKxC,MAAMJ,MAAMS,KAAjC,qBAAkDmC,KAAKxC,MAAM4C,EAAEzB,GAA/D,wBAAiFqB,KAAKxC,MAAM4C,EAAEG,OAAOC,UAArG,eAAqHR,KAAKxC,MAAM4C,EAAEd,cAEvI,uCACE,uCAAUU,KAAKxC,MAAM4C,EAAEzB,MACvB,2CAAcqB,KAAKxC,MAAM4C,EAAEG,OAAOC,aAClC,+CAAkBR,KAAKxC,MAAM4C,EAAEd,oBAGnC,wBAAQxB,QAAU,SAAA2C,GAAG,OAAI,EAAKjD,MAAMkD,gBAAgB,EAAKlD,MAAM4C,EAAEzB,KAAMgC,MAAOX,KAAKxC,MAAMoD,MAAMZ,KAAKxC,MAAM4C,EAAEzB,IAAM,CAACkC,gBAAgB,OAAQC,MAAM,SAAW,GAA5J,SACGd,KAAKxC,MAAMoD,MAAMZ,KAAKxC,MAAM4C,EAAEzB,IAAM,SAAW,gB,GAtBvBoC,aCOdC,E,4MAEnBlB,MAAQ,CACNpC,OAAQ,CAAC,YAAY,eAAe,cAAc,UAClDN,MAAM,CACJS,KAAK,GACLK,aAAa,GACbD,YAAY,GACZE,SAAS,GACTC,QAAQ,GACR6C,OAAO,GACP5C,OAAO,GACPC,aAAa,IAEfc,QAAQ,CAACC,OAAM,GACfN,UAAU,EACVzB,IAAI,GACJ2D,OAAO,GACPvB,MAAM,EACNkB,MAAM,GACNM,cAAc,G,EAGhBjC,aAAe,SAACwB,GACd,EAAKP,SAAL,eACGO,EAAIU,OAAOtD,KAAOuD,SAASX,EAAIU,OAAOrC,U,EAI3CN,oB,uCAAsB,WAAOiC,GAAP,iBAAA5D,EAAA,yDACpB4D,EAAIY,iBACJ,EAAKnB,SAAS,CACZ5C,IAAK,EAAKwC,MAAMf,YAGK,qBADjBK,EAAU,EAAKU,MAAM1C,MAAM6D,OAAOK,MAAK,SAAAC,GAAC,OAAIA,EAAEjE,MAAQ,EAAKwC,MAAMf,cALnD,gBAOlB,EAAKmB,SAAS,CACZd,QAAS,CAACC,OAAO,GACjB4B,OAAO,KATS,8BAalB,EAAKf,SAAS,CACZd,QAAQ,aACNC,OAAO,GACJD,GAELoC,SAAS,IAlBO,UAqBDnE,EAAe,EAAKyC,MAAM1C,MAAMS,KAAM,EAAKiC,MAAMxC,KArBhD,YAqBdL,EArBc,QAwBTwE,SAAW,EAAK3B,MAAMV,QAAQd,aAxBrB,kCAyBHjB,EAAe,EAAKyC,MAAM1C,MAAMS,KAAM,EAAKiC,MAAMxC,KAzB9C,QAyBhBL,EAzBgB,eA2BlB,EAAKiD,SAAS,CACZsB,SAAS,EACTP,OAAQhE,EAAKgE,OACbvB,MAAM,EACNE,SACE,EAAKE,MAAMoB,cAAgB,EAAKpB,MAAMV,QAAQd,aAC5C,EAAKwB,MAAMV,QAAQd,aACnB,EAAKwB,MAAMoB,gBAlCC,4C,wDAuCtBvB,eAAiB,SAAC+B,GACZ,EAAK5B,MAAMF,WAAa,EAAKE,MAAMV,QAAQd,aAC7C,EAAK4B,SAAS,CACZR,MAAO,EAAKI,MAAMJ,MAAQ,EAAKI,MAAMoB,cACrCtB,SAAU,EAAKE,MAAMJ,QAIvB,EAAKQ,SAAS,CACZR,MAAO,EAAKI,MAAMJ,MAAS,EAAKI,MAAMoB,cAAgBQ,EACtD9B,SACE,EAAKE,MAAMF,SAAY,EAAKE,MAAMoB,cAAgBQ,EAAO,EAAK5B,MAAMV,QAAQd,aACxE,EAAKwB,MAAMV,QAAQd,aACnB,EAAKwB,MAAMF,SAAY,EAAKE,MAAMoB,cAAgBQ,K,EAK9D3D,kB,uCAAoB,WAAOX,GAAP,eAAAP,EAAA,sEACCM,EAAYC,GADb,OACZH,EADY,OAElB,EAAKiD,SAAS,CACZ9C,MAAMH,EAAK0E,eACXV,OAAO,GACPvB,MAAM,EACNpC,IAAI,KANY,2C,wDAUpBoD,gBAAkB,SAAC/B,GACjB,IAAMiD,EAAW,EAAK9B,MAAMc,MAC5BgB,EAASjD,IAAOiD,EAASjD,GACzB,EAAKuB,SAAS,CACZU,MAAMgB,K,4CAIV,WAAS,IAAD,OACN,OACE,gCACE,8CACA,mCACE,cAAC,EAAD,2BACM5B,KAAKF,OADX,IAEE/B,kBAAmBiC,KAAKjC,qBAE1B,cAACC,EAAD,2BACMgC,KAAKF,OADX,IAEEtB,oBAAqBwB,KAAKxB,oBAC1BS,aAAce,KAAKf,gBAErB,cAACE,EAAD,eAAaa,KAAKF,WAGpB,uBAAMnB,GAAG,OAAT,UACGqB,KAAKF,MAAMmB,OAAOQ,OAAS,GAC1B,qCACE,qCAAQzB,KAAKF,MAAMxC,IAAnB,aAAkC0C,KAAKF,MAAMJ,MAAM,EAAnD,MAAyDM,KAAKF,MAAMF,SAApE,WAAsFiC,KAAKC,KAAK9B,KAAKF,MAAMF,SAAWI,KAAKF,MAAMoB,eAAjI,IAAkJW,KAAKC,KAAK9B,KAAKF,MAAMV,QAAQd,aAAe0B,KAAKF,MAAMoB,kBACzM,cAACzB,EAAD,2BAAyBO,KAAKF,OAA9B,IAAqCH,eAAgBK,KAAKL,qBAG9D,6BACGK,KAAKF,MAAM0B,QACVO,MAAMC,KAAKD,MAAM/B,KAAKF,MAAMoB,gBAAgBvD,KAAI,SAACyC,EAAExC,GAAH,OAC9C,qBAAYH,UAAU,UAAtB,UACE,wBACA,wBACA,wBACA,wBACA,0BALOG,MASXoC,KAAKF,MAAMmB,OAAOvB,MAAMM,KAAKF,MAAMJ,MAAOM,KAAKF,MAAMF,UAAUjC,KAAK,SAAAyC,GAAC,OACnE,cAAC,EAAD,2BAAsB,EAAKN,OAA3B,IAAkCM,EAAGA,EAAGM,gBAAiB,EAAKA,kBAAlDN,EAAEzB,SAInBqB,KAAKF,MAAMmB,OAAOQ,OAAS,GAC1B,cAAC,OAAD,CAAOQ,GAAG,OAAOC,KAAK,EAAOC,QAAQ,EAArC,SACE,cAAC1C,EAAD,2BAAyBO,KAAKF,OAA9B,IAAqCH,eAAgBK,KAAKL,8B,GAnJvCoB,aCElBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83d1bb08.chunk.js","sourcesContent":["const api_key = 'fUwiBPvvBwZXfky5QXVrVsSlOmRHlLQXnnZv03dI'\n\nasync function get(url){\n  const fetchResponse = await fetch(url)\n  let data = await fetchResponse.json();\n  if (!fetchResponse.ok) throw data;\n  return data;\n}\n\nexport async function getManifest(rover){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/manifests/${rover}/?api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}\n\nexport async function getPhotosBySol(rover, sol){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}","import \"./RoverSelect.css\"\n\nexport default function RoverSelect(props){\n  return(\n    <div>\n      <h2>Select a rover</h2>\n      <ul className=\"rover-list\">\n        {props.rovers.map((rover,i)=>(\n          <li \n            className={rover===props.rover.name ? 'current':''} \n            key={i} \n            onClick={()=>props.handleSelectRover(rover)}\n          >\n            {rover}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}","export default function RoverInfo(props){\n  return(\n    <>\n      {props.rover.name && \n        <div>\n          <h2>{props.rover.name}</h2>\n          <p>Launch date: <span>{props.rover.launch_date}</span></p>\n          <p>Landing date: <span>{props.rover.landing_date}</span></p>\n          <p>Latest day with photos: <span>{props.rover.max_date}</span></p>\n          <p>Martian days (Sols) with photos: <span>{props.rover.max_sol}</span></p>\n          <p>Status: <span>{props.rover.status}</span></p>\n          <p>Total Photos: <span>{props.rover.total_photos}</span></p>\n\n          <form onSubmit={props.handleRequestPhotos}>\n            <label htmlFor=\"solPicker\">Show me photos from Sol day:</label>\n            <span>\n              <input \n                type=\"number\" \n                id=\"solPicker\"\n                name=\"solPicker\" \n                min=\"0\" \n                max={props.rover.max_sol} \n                value={props.solPicker} \n                onChange={props.handleChange} \n                required \n              />\n              <button className=\"bg-white\" type=\"submit\">Go</button>\n            </span>\n          </form>\n        </div>\n      }\n    </>\n  )\n}","export default function SolInfo(props){\n  return(\n    <>\n      {typeof props.sol === 'number' &&\n        <div>\n          <h2>Sol {props.sol}</h2>\n          {props.solInfo.empty ? \n            <p>No photos from this date</p> \n          : \n            <>\n              <p>Earth Date: <span>{props.solInfo.earth_date}</span></p>\n              <p>Total Photos: <span>{props.solInfo.total_photos}</span></p>\n              <h3>Cameras in use:</h3>\n              <ul>\n                {props.solInfo.cameras.map((c,i) => (\n                  <li key={i}>{c}</li>\n                ))}\n              </ul>\n            </>\n          }\n        </div>\n      }\n    </>\n  )\n}","export default function NextPrevPageButtons(props){\n  return(\n    <>\n      {props.slice > 0 && \n        <button onClick={()=>props.handleLoadMore(-1)}>Previous page</button>\n      }\n      {props.sliceEnd !== props.solInfo.total_photos && \n        <button onClick={()=>props.handleLoadMore(1)}>Next page</button>\n      } \n    </>\n  )\n}","import { Component } from \"react\";\nimport './Photo.css';\n\nexport default class Photo extends Component{\n\n  state = {\n    loaded: false\n  }\n\n  render(){\n    return(\n      <li>\n        <figure className={this.state.loaded ? null : 'loading'}>\n          <img \n            onLoad={() => this.setState({loaded: true})}\n            src={this.props.p.img_src} \n            alt={`Mars rover ${this.props.rover.name} photo id ${this.props.p.id}, taken with ${this.props.p.camera.full_name} on ${this.props.p.earth_date}`}\n          />\n          <figcaption>\n            <div>ID: {this.props.p.id}</div>\n            <div>Camera: {this.props.p.camera.full_name}</div>\n            <div>Earth Date: {this.props.p.earth_date}</div>\n          </figcaption>\n        </figure>\n        <button onClick={ evt => this.props.handleClickLike(this.props.p.id) } style={this.props.likes[this.props.p.id] ? {backgroundColor:\"pink\", color:\"black\"} : {} }>\n          {this.props.likes[this.props.p.id] ? \"Unlike\" : \"Like\"}\n        </button>\n      </li>\n    )\n  }\n}","import { Component } from \"react\";\nimport { getManifest, getPhotosBySol } from \"./utils/fetch\";\nimport {Link} from 'react-scroll'\nimport './App.css';\nimport RoverSelect from \"./components/RoverSelect\";\nimport RoverInfo from \"./components/RoverInfo\";\nimport SolInfo from \"./components/SolInfo\";\nimport NextPrevPageButtons from \"./components/NextPrevPageButtons\";\nimport Photo from \"./components/Photo\";\n\nexport default class App extends Component{\n\n  state = {\n    rovers: ['Curiosity','Perseverance','Opportunity','Spirit'],\n    rover:{\n      name:'',\n      landing_date:'',\n      launch_date:'',\n      max_date:'',\n      max_sol:'',\n      photos:[],\n      status:'',\n      total_photos:'',\n    },\n    solInfo:{empty:true},\n    solPicker:0,\n    sol:'',\n    photos:[],\n    slice:0,\n    likes:{},\n    photosPerPage:8\n  }\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: parseInt(evt.target.value),\n    });\n  };\n\n  handleRequestPhotos = async (evt) => {\n    evt.preventDefault();\n    this.setState({\n      sol: this.state.solPicker\n    })\n    const solInfo = this.state.rover.photos.find(e => e.sol === this.state.solPicker)\n    if (typeof solInfo === 'undefined'){\n      this.setState({\n        solInfo: {empty: true},\n        photos:[]\n      })\n    }\n    else{\n      this.setState({\n        solInfo: {\n          empty: false,\n          ...solInfo\n        },\n        loading: true\n      })\n\n      let data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      // For some reason, the API sometimes gives back an empty object when it ought not too\n      // In these cases, just try it one more time\n      if (data.length !== this.state.solInfo.total_photos){\n        data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      }\n      this.setState({\n        loading: false,\n        photos: data.photos,\n        slice:0,\n        sliceEnd: \n          this.state.photosPerPage > this.state.solInfo.total_photos ? \n            this.state.solInfo.total_photos \n          : this.state.photosPerPage\n      })\n    }\n  }\n\n  handleLoadMore = (dir) => {\n    if (this.state.sliceEnd === this.state.solInfo.total_photos){\n      this.setState({\n        slice: this.state.slice - this.state.photosPerPage,\n        sliceEnd: this.state.slice\n      })\n    }\n    else{\n      this.setState({\n        slice: this.state.slice + (this.state.photosPerPage * dir),\n        sliceEnd: \n          this.state.sliceEnd + (this.state.photosPerPage * dir) > this.state.solInfo.total_photos ? \n              this.state.solInfo.total_photos \n            : this.state.sliceEnd + (this.state.photosPerPage * dir)\n      })\n    }\n  }\n\n  handleSelectRover = async (rover) => {\n    const data = await getManifest(rover)\n    this.setState({\n      rover:data.photo_manifest,\n      photos:[],\n      slice:0,\n      sol:''\n    })\n  }\n\n  handleClickLike = (id) => {\n    const newLikes = this.state.likes\n    newLikes[id] = !newLikes[id]\n    this.setState({\n      likes:newLikes\n    })\n  }\n\n  render(){ \n    return(\n      <div>\n        <h1>Spacestagram</h1>\n        <header>\n          <RoverSelect \n            {...this.state} \n            handleSelectRover={this.handleSelectRover}\n          />\n          <RoverInfo\n            {...this.state}\n            handleRequestPhotos={this.handleRequestPhotos}\n            handleChange={this.handleChange}\n          />\n          <SolInfo {...this.state}/>\n        </header>\n        \n        <main id=\"main\">\n          {this.state.photos.length > 0 && \n            <>\n              <p>Sol {this.state.sol} | Photos {this.state.slice+1} - {this.state.sliceEnd} | Page {Math.ceil(this.state.sliceEnd / this.state.photosPerPage)}/{Math.ceil(this.state.solInfo.total_photos / this.state.photosPerPage)}</p>\n              <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n            </>\n          }\n          <ul>\n            {this.state.loading ?\n              Array.from(Array(this.state.photosPerPage)).map((p,i)=>(\n                <li key={i} className=\"loading\">\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                </li>\n              ))\n            : \n              this.state.photos.slice(this.state.slice, this.state.sliceEnd).map( p => (\n                <Photo key={p.id} {...this.state} p={p} handleClickLike={this.handleClickLike}/>\n              ))\n            }\n          </ul>\n          {this.state.photos.length > 0 && \n            <Link  to=\"main\" spy={false} smooth={true}>\n              <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n            </Link>\n          }\n        </main>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}