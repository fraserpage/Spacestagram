{"version":3,"sources":["utils/fetch.js","components/NextPrevPageButtons.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["api_key","get","url","a","fetch","fetchResponse","json","data","ok","getManifest","rover","getPhotosBySol","sol","NextPrevPageButtons","props","slice","onClick","handleLoadMore","sliceEnd","solInfo","total_photos","App","state","rovers","name","landing_date","launch_date","max_date","max_sol","photos","status","empty","solPicker","likes","photosPerPage","handleChange","evt","setState","target","parseInt","value","handleRequestPhotos","preventDefault","find","e","loading","length","dir","handleSelectRover","photo_manifest","handleClickLike","id","newLikes","className","this","map","i","onSubmit","for","type","min","max","onChange","required","earth_date","cameras","c","Math","ceil","p","src","img_src","alt","camera","full_name","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e5bebca.chunk.js","sourcesContent":["const api_key = 'fUwiBPvvBwZXfky5QXVrVsSlOmRHlLQXnnZv03dI'\n\nasync function get(url){\n  const fetchResponse = await fetch(url)\n  let data = await fetchResponse.json();\n  if (!fetchResponse.ok) throw data;\n  return data;\n}\n\nexport async function getManifest(rover){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/manifests/${rover}/?api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}\n\nexport async function getPhotosBySol(rover, sol){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}","export default function NextPrevPageButtons(props){\n  return(\n    <>\n      {props.slice > 0 && \n        <button onClick={()=>props.handleLoadMore(-1)}>Previous page</button>\n      }\n      {props.sliceEnd !== props.solInfo.total_photos && \n        <button onClick={()=>props.handleLoadMore(1)}>Next page</button>\n      } \n    </>\n  )\n}","import { Component } from \"react\";\nimport { getManifest, getPhotosBySol } from \"./utils/fetch\";\nimport './App.css';\nimport NextPrevPageButtons from \"./components/NextPrevPageButtons\";\n\nexport default class App extends Component{\n\n  state = {\n    rovers: ['Curiosity','Perseverance','Opportunity','Spirit'],\n    rover:{\n      name:'',\n      landing_date:'',\n      launch_date:'',\n      max_date:'',\n      max_sol:'',\n      photos:[],\n      status:'',\n      total_photos:'',\n    },\n    solInfo:{empty:true},\n    solPicker:0,\n    sol:'',\n    photos:[],\n    slice:0,\n    likes:{},\n    photosPerPage:6\n  }\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: parseInt(evt.target.value),\n    });\n  };\n\n  handleRequestPhotos = async (evt) => {\n    evt.preventDefault();\n    this.setState({\n      sol: this.state.solPicker\n    })\n    const solInfo = this.state.rover.photos.find(e => e.sol === this.state.solPicker)\n    if (typeof solInfo === 'undefined'){\n      this.setState({\n        solInfo: {empty: true}\n      })\n    }\n    else{\n      this.setState({\n        solInfo: {\n          empty: false,\n          ...solInfo\n        },\n        loading: true\n      })\n\n      let data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      // For some reason, the API sometimes gives back an empty object when it ought not too\n      // In these cases, just try it one more time\n      if (data.length !== this.state.solInfo.total_photos){\n        data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      }\n      this.setState({\n        loading: false,\n        photos: data.photos,\n        slice:0,\n        sliceEnd: \n          this.state.photosPerPage > this.state.solInfo.total_photos ? \n            this.state.solInfo.total_photos \n          : this.state.photosPerPage\n      })\n    }\n  }\n\n  handleLoadMore = (dir) => {\n    if (this.state.sliceEnd === this.state.solInfo.total_photos){\n      this.setState({\n        slice: this.state.slice - this.state.photosPerPage,\n        sliceEnd: this.state.slice\n      })\n    }\n    else{\n      this.setState({\n        slice: this.state.slice + (this.state.photosPerPage * dir),\n        sliceEnd: \n          this.state.sliceEnd + (this.state.photosPerPage * dir) > this.state.solInfo.total_photos ? \n              this.state.solInfo.total_photos \n            : this.state.sliceEnd + (this.state.photosPerPage * dir)\n      })\n    }\n  }\n\n  handleSelectRover = async (rover) => {\n    const data = await getManifest(rover)\n    this.setState({\n      rover:data.photo_manifest,\n      photos:[],\n      slice:0,\n      sol:''\n    })\n  }\n\n  handleClickLike = (id) => {\n    const newLikes = this.state.likes\n    newLikes[id] = !newLikes[id]\n    this.setState({\n      likes:newLikes\n    })\n  }\n\n  render(){ \n    return(\n      <div>\n        <h1>Spacestagram</h1>\n        <header>\n          <div>\n            <h2>Select a rover</h2>\n            <ul className=\"rover-list\">\n              {this.state.rovers.map((rover,i)=>(\n                <li \n                  className={rover===this.state.rover.name ? 'current':''} \n                  key={i} \n                  onClick={()=>this.handleSelectRover(rover)}\n                >\n                  {rover}\n                </li>\n              ))}\n            </ul>\n          </div>\n          {this.state.rover.name && \n            <div>\n              <h2>{this.state.rover.name}</h2>\n              <p>Launch date: <span>{this.state.rover.launch_date}</span></p>\n              <p>Landing date: <span>{this.state.rover.landing_date}</span></p>\n              <p>Latest day with photos: <span>{this.state.rover.max_date}</span></p>\n              <p>Martian days (Sols) with photos: <span>{this.state.rover.max_sol}</span></p>\n              <p>Status: <span>{this.state.rover.status}</span></p>\n              <p>Total Photos: <span>{this.state.rover.total_photos}</span></p>\n    \n              <form onSubmit={this.handleRequestPhotos}>\n                <label for=\"solPicker\">Show me photos from Sol day:</label>\n                <span>\n                  <input \n                    type=\"number\" \n                    id=\"solPicker\"\n                    name=\"solPicker\" \n                    min=\"0\" \n                    max={this.state.rover.max_sol} \n                    value={this.state.solPicker} \n                    onChange={this.handleChange} \n                    required \n                  />\n                  <button className=\"bg-white\" type=\"submit\">Go</button>\n                </span>\n              </form>\n            </div>\n          }\n          {typeof this.state.sol === 'number' &&\n            <div>\n              <h2>Sol {this.state.sol}</h2>\n              {this.state.solInfo.empty ? \n                <p>No photos from this date</p> \n              : \n                <>\n                  <p>Earth Date: <span>{this.state.solInfo.earth_date}</span></p>\n                  <p>Total Photos: <span>{this.state.solInfo.total_photos}</span></p>\n                  <h3>Cameras in use:</h3>\n                  <ul>\n                    {this.state.solInfo.cameras.map((c,i) => (\n                      <li key={i}>{c}</li>\n                    ))}\n                  </ul>\n                </>\n              }\n            </div>\n          }\n        </header>\n        \n        <main>\n          {this.state.loading &&\n            <div className=\"loading\">Loading...</div>\n          }\n          {this.state.photos.length > 0 && \n            <>\n              <p>Sol {this.state.sol} | Photos {this.state.slice+1} - {this.state.sliceEnd} | Page {Math.ceil(this.state.sliceEnd / this.state.photosPerPage)}/{Math.ceil(this.state.solInfo.total_photos / this.state.photosPerPage)}</p>\n              <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n            </>\n          }\n          <ul>\n            {this.state.photos.slice(this.state.slice, this.state.sliceEnd).map( p => (\n              <li key={p.id}>\n                <img src={p.img_src} alt={`Mars rover ${this.state.rover.name} photo id ${p.id}, taken with ${p.camera.full_name} on ${p.earth_date}`}/>\n                <p>ID: {p.id}</p>\n                <p>Camera: {p.camera.full_name}</p>\n                <p>Earth Date: {p.earth_date}</p>\n                <p>Sol: {p.sol}</p>\n                <button onClick={ evt => this.handleClickLike(p.id) }>\n                  {this.state.likes[p.id] ? \"Unlike\" : \"Like\"}\n                </button>\n              </li>\n            ))}\n          </ul>\n          {this.state.photos.length > 0 && \n            <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n          }\n        </main>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}