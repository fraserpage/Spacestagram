{"version":3,"sources":["utils/fetch.js","components/RoverSelect/RoverSelect.jsx","utils/formatters.js","components/RoverInfo/RoverInfo.jsx","components/SolInfo/SolInfo.jsx","components/PageInfo/PageInfo.jsx","components/NextPrevPageButtons/NextPrevPageButtons.jsx","components/Photo/Photo.jsx","components/LoadingPlaceholders/LoadingPlaceholders.jsx","utils/setPickerHint.js","App.jsx","reportWebVitals.js","index.js"],"names":["api_key","get","url","a","fetch","fetchResponse","json","data","ok","getManifest","rover","getPhotosBySol","sol","RoverSelect","props","className","rovers","map","i","name","onClick","handleSelectRover","numberWithCommas","x","toString","replace","RoverInfo","launch_date","landing_date","max_date","max_sol","status","toUpperCase","total_photos","onSubmit","handleRequestPhotos","htmlFor","inputmode","type","id","min","max","value","solPicker","onChange","handleChangeSolInput","required","solPickerHint","SolInfo","solInfo","empty","earth_date","cameras","c","handleFilterCamera","camFilter","PageInfo","slice","sliceEnd","photoSet","length","Math","ceil","photosPerPage","handleChangePhotosPerPage","photosPerPageCtrl","photosPerPageErr","style","NextPrevPageButtons","handleLoadMore","Photo","state","loaded","this","onLoad","setState","src","p","img_src","alt","camera","full_name","evt","handleClickLike","likes","backgroundColor","color","Component","LoadingPlaceholders","Array","from","setPickerHint","roverPhotos","find","e","isNaN","String","fromCharCode","App","photos","setSliceEnd","dir","resetSliceEnd","numPhotos","parseInt","target","photo_manifest","preventDefault","loading","newPhotoSet","filter","newLikes","href","to","spy","smooth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83d035f2.chunk.js","sourcesContent":["const api_key = 'fUwiBPvvBwZXfky5QXVrVsSlOmRHlLQXnnZv03dI'\n\nasync function get(url){\n  const fetchResponse = await fetch(url)\n  let data = await fetchResponse.json();\n  if (!fetchResponse.ok) throw data;\n  return data;\n}\n\nexport async function getManifest(rover){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/manifests/${rover}/?api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}\n\nexport async function getPhotosBySol(rover, sol){\n  const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&api_key=${api_key}`\n  const data = await get(url)\n  return data;\n}","import \"./RoverSelect.css\"\n\nexport default function RoverSelect(props){\n  return(\n    <div>\n      <h2>Select a rover</h2>\n      <ul className=\"rover-list\">\n        {props.rovers.map((rover,i)=>(\n          <li \n            className={rover===props.rover.name ? 'current':''} \n            key={i} \n            onClick={()=>props.handleSelectRover(rover)}\n          >\n            {rover}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}","function numberWithCommas(x) {\n  return x.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\")\n}\n\nexport {numberWithCommas}","import './RoverInfo.css'\nimport { numberWithCommas } from \"../../utils/formatters\"\n\nexport default function RoverInfo(props){\n  return(\n    <>\n      {props.rover.name && \n        <div>\n          <h2>{props.rover.name}</h2>\n          <dl>\n            <dt>Launch date: </dt>\n              <dd>{props.rover.launch_date}</dd>\n            <dt>Landing date: </dt>\n              <dd>{props.rover.landing_date}</dd>\n            <dt>Latest day with photos: </dt>\n              <dd>{props.rover.max_date}</dd>\n            <dt><div>Last Martian day (Sol) since landing with photos: </div></dt>\n              <dd>{numberWithCommas(props.rover.max_sol)}</dd>\n            <dt>Status: </dt>\n              <dd>{props.rover.status.toUpperCase()}</dd>\n            <dt>Total Photos: </dt>\n              <dd>{numberWithCommas(props.rover.total_photos)}</dd>\n          </dl>\n\n          <form onSubmit={props.handleRequestPhotos}>\n            <label htmlFor=\"solPicker\">Show me photos from Sol:</label>\n            <span>\n              <input \n                inputmode=\"numeric\"\n                type=\"number\" \n                id=\"solPicker\"\n                name=\"solPicker\" \n                min=\"0\" \n                max={props.rover.max_sol} \n                value={props.solPicker} \n                onChange={props.handleChangeSolInput} \n                required \n              />\n              <button className=\"bg-white\" type=\"submit\">Go</button>\n            </span>\n          </form>\n          <p>{props.solPickerHint}</p>\n        </div>\n      }\n    </>\n  )\n}","import { numberWithCommas } from \"../../utils/formatters\"\n\nexport default function SolInfo(props){\n  return(\n    <>\n      {typeof props.sol === 'number' &&\n        <div>\n          <h2>Sol {props.sol}</h2>\n          {props.solInfo.empty ? \n            <p>No photos from this date</p> \n          : \n            <>\n              <p>Earth Date: <span>{props.solInfo.earth_date}</span></p>\n              <p>Total Photos: <span>{numberWithCommas(props.solInfo.total_photos)}</span></p>\n              <h3>\n                Cameras in use:<br/>\n                (Click to filter)\n              </h3>\n              <ul className=\"cameras\">\n                {props.solInfo.cameras.map((c,i) => (\n                  <li \n                    key={i} \n                    onClick={()=>props.handleFilterCamera(c)}\n                    className={c===props.camFilter ? 'current':''} \n                  >\n                    {c}\n                  </li>\n                ))}\n              </ul>\n            </>\n          }\n        </div>\n      }\n    </>\n  )\n}","import './PageInfo.css'\n\nexport default function PageInfo(props) {\n  return(\n    <p className=\"page-info\">\n      <span> Sol {props.sol} </span> \n      {props.camFilter ? \n        <span> | Camera: {props.camFilter} </span> \n        : ''\n      }\n      <span> | Photos {props.slice+1} - {props.sliceEnd} of {props.photoSet.length} </span>\n      <span> | Page {Math.ceil(props.sliceEnd / props.photosPerPage)}/{Math.ceil(props.photoSet.length / props.photosPerPage)} </span>\n      <span> | <label htmlFor=\"photosPerPage\">Photos per page: </label>\n        <input \n          type=\"number\"\n          inputmode=\"numeric\"\n          onChange={props.handleChangePhotosPerPage} \n          value={props.photosPerPageCtrl} \n          min={1} \n          max={999}\n          name=\"photosPerPageCtrl\" \n          id=\"photosPerPageCtrl\"\n          required\n        />\n      </span>\n      {props.photosPerPageErr && <div style={{'color':'red', '--wght':600, 'display':'inline-block'}}>{props.photosPerPageErr}</div>}\n    </p>\n  )\n}","export default function NextPrevPageButtons(props){\n  return(\n    <>\n      {props.slice > 0 && \n        <button onClick={()=>props.handleLoadMore(-1)}>Previous page</button>\n      }\n      {props.sliceEnd !== props.photoSet.length && \n        <button onClick={()=>props.handleLoadMore(1)}>Next page</button>\n      } \n    </>\n  )\n}","import { Component } from \"react\";\nimport './Photo.css';\n\nexport default class Photo extends Component{\n\n  state = {\n    loaded: false\n  }\n\n  render(){\n    return(\n      <li>\n        <figure className={this.state.loaded ? null : 'loading'}>\n          {/* eslint-disable-next-line */}\n          <img \n            onLoad={() => this.setState({loaded: true})}\n            src={this.props.p.img_src} \n            alt={`Mars rover ${this.props.rover.name} photo id ${this.props.p.id}, taken with ${this.props.p.camera.full_name} on ${this.props.p.earth_date}`}\n          />\n          <figcaption>\n            <div>ID: {this.props.p.id}</div>\n            <div>Camera: {this.props.p.camera.full_name}</div>\n            <div>Earth Date: {this.props.p.earth_date}</div>\n          </figcaption>\n        </figure>\n        <button onClick={ evt => this.props.handleClickLike(this.props.p.id) } style={this.props.likes[this.props.p.id] ? {backgroundColor:\"pink\", color:\"black\"} : {} }>\n          {this.props.likes[this.props.p.id] ? \"Unlike\" : \"Like\"}\n        </button>\n      </li>\n    )\n  }\n}","import \"./LoadingPlaceholders.css\"\n\nexport default function  LoadingPlaceholders(props) {\n  return(\n    <ul>\n      {Array.from(Array(props.photosPerPage)).map((p,i)=>(\n        <li key={i} className=\"loading\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </li>\n      ))}\n    </ul>\n  )\n}","import { numberWithCommas } from \"./formatters\"\n\nexport default function setPickerHint(roverPhotos, sol){\n\n  const solInfo = roverPhotos.find(e => e.sol === sol)\n  if (isNaN(sol)){\n    return String.fromCharCode(160)\n  }\n  if (typeof solInfo === 'undefined'){\n    return `No photos from Sol ${sol}`\n  }\n  else{\n    return `${numberWithCommas(solInfo.total_photos)} photos from Sol ${sol}`\n  }\n}","import { Component } from \"react\";\nimport { getManifest, getPhotosBySol } from \"./utils/fetch\";\nimport {Link} from 'react-scroll'\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport './App.css';\nimport RoverSelect from \"./components/RoverSelect/RoverSelect\";\nimport RoverInfo from \"./components/RoverInfo/RoverInfo\";\nimport SolInfo from \"./components/SolInfo/SolInfo\";\nimport PageInfo from \"./components/PageInfo/PageInfo\";\nimport NextPrevPageButtons from \"./components/NextPrevPageButtons/NextPrevPageButtons\";\nimport Photo from \"./components/Photo/Photo\";\nimport LoadingPlaceholders from \"./components/LoadingPlaceholders/LoadingPlaceholders\";\nimport setPickerHint from \"./utils/setPickerHint\";\n\nexport default class App extends Component{\n\n  state = {\n    rovers: ['Curiosity','Perseverance','Opportunity','Spirit'],\n    rover:{\n      name:'',\n      landing_date:'',\n      launch_date:'',\n      max_date:'',\n      max_sol:'',\n      photos:[],\n      status:'',\n      total_photos:'',\n    },\n    solInfo:{empty:true},\n    solPicker:0,\n    solPickerHint:\"\",\n    sol:'',\n    photos:[],\n    photoSet:[],\n    camFilter:\"\",\n    slice:0,\n    likes:{},\n    photosPerPage:8,\n    photosPerPageCtrl:8,\n    photosPerPageErr:\"\"\n  }\n\n  setSliceEnd = (dir) => {\n    return this.state.sliceEnd + (this.state.photosPerPage * dir) > this.state.photoSet.length ? \n              this.state.photoSet.length \n            : this.state.sliceEnd + (this.state.photosPerPage * dir)\n  }\n\n  resetSliceEnd = (numPhotos, photosPerPage) =>{\n    return photosPerPage > numPhotos ? \n              numPhotos \n            : photosPerPage\n  }\n\n  handleChangeSolInput = (evt) => {\n    const sol = parseInt(evt.target.value)\n    this.setState({\n      [evt.target.name]: sol,\n      solPickerHint: setPickerHint(this.state.rover.photos, sol)\n    });\n  }\n\n  handleChangePhotosPerPage = (evt) => {\n    const photosPerPage = parseInt(evt.target.value)\n    this.setState({\n      [evt.target.name]: photosPerPage\n    });\n    if (photosPerPage > 1000){\n      this.setState({\n        photosPerPageErr:\"Ok let's not go crazy with \"+photosPerPage+\" photos per page! You'll crash your browser! Max 999, deal?\"\n      })\n      return\n    }\n    if (photosPerPage > 0){\n      this.setState({\n        photosPerPage: photosPerPage,\n        slice: 0,\n        sliceEnd: this.resetSliceEnd(this.state.photoSet.length, photosPerPage),\n        photosPerPageErr:\"\"\n      });\n    }\n  }\n\n  handleSelectRover = async (rover) => {\n    const data = await getManifest(rover)\n    this.setState({\n      rover:data.photo_manifest,\n      photos:[],\n      photoSet:[],\n      slice:0,\n      sol:'',\n      camFilter:'',\n      solPickerHint: setPickerHint(data.photo_manifest.photos, this.state.solPicker)\n    })\n  }\n\n  handleRequestPhotos = async (evt) => {\n    evt.preventDefault();\n    this.setState({\n      sol: this.state.solPicker\n    })\n    const solInfo = this.state.rover.photos.find(e => e.sol === this.state.solPicker)\n    if (typeof solInfo === 'undefined'){\n      this.setState({\n        solInfo: {empty: true},\n        photos:[]\n      })\n    }\n    else{\n      this.setState({\n        solInfo: {\n          empty: false,\n          ...solInfo\n        },\n        loading: true\n      })\n\n      let data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      // For some reason, the API sometimes gives back an empty object when it ought not too\n      // In these cases, just try it one more time\n      if (data.length !== this.state.solInfo.total_photos){\n        data = await getPhotosBySol(this.state.rover.name, this.state.sol)\n      }\n      this.setState({\n        loading: false,\n        photos: data.photos,\n        photoSet: data.photos,\n        camFilter:'',\n        slice:0,\n        sliceEnd: this.resetSliceEnd(data.photos.length, this.state.photosPerPage)\n      })\n    }\n  }\n\n  handleFilterCamera = (camera) => {\n    if (camera === this.state.camFilter){\n      this.setState({\n        photoSet: this.state.photos,\n        camFilter: \"\",\n        slice:0,\n        sliceEnd: this.resetSliceEnd(this.state.photos.length, this.state.photosPerPage)\n      })\n    }\n    else{\n      const newPhotoSet = this.state.photos.filter(p => p.camera.name === camera)\n      this.setState({\n        photoSet: newPhotoSet,\n        camFilter: camera,\n        slice:0,\n        sliceEnd: this.resetSliceEnd(newPhotoSet.length, this.state.photosPerPage)\n      })\n    }\n    \n  }\n\n  handleLoadMore = (dir) => {\n    if (this.state.sliceEnd === this.state.photoSet.length){\n      this.setState({\n        slice: this.state.slice - this.state.photosPerPage,\n        sliceEnd: this.state.slice\n      })\n    }\n    else{\n      this.setState({\n        slice: this.state.slice + (this.state.photosPerPage * dir),\n        sliceEnd: this.setSliceEnd(dir)\n      })\n    }\n  }\n\n  handleClickLike = (id) => {\n    const newLikes = this.state.likes\n    newLikes[id] = !newLikes[id]\n    this.setState({\n      likes:newLikes\n    })\n  }\n\n  render(){ \n    return(\n      <div>\n        <h1>Spacestagram</h1>\n        <p>A fun little React app for exploring Mars Rover photos</p>\n        <p>by <a href=\"https://fraser.page\">Fraser Page</a></p>\n        <header>\n          <RoverSelect \n            {...this.state} \n            handleSelectRover={this.handleSelectRover}\n          />\n          <RoverInfo\n            {...this.state}\n            handleRequestPhotos={this.handleRequestPhotos}\n            handleChangeSolInput={this.handleChangeSolInput}\n          />\n          <SolInfo \n            handleFilterCamera={this.handleFilterCamera}\n            {...this.state}\n          />\n        </header>\n        \n        <main id=\"main\">\n          {this.state.photoSet.length > 0 && \n            <>\n              <PageInfo {...this.state} handleChangePhotosPerPage={this.handleChangePhotosPerPage} />\n              <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n            </>\n          }\n          {!isNaN(this.state.photosPerPage) && \n            this.state.loading ?\n              <LoadingPlaceholders {...this.state}/>\n            : \n              <SRLWrapper>\n                <ul>\n                  {this.state.photoSet.slice(this.state.slice, this.state.sliceEnd).map( p => (\n                    <Photo key={p.id} {...this.state} p={p} handleClickLike={this.handleClickLike}/>\n                  ))}\n                </ul>\n              </SRLWrapper>\n            \n          }\n          {this.state.photoSet.length > 0 && this.state.photosPerPage > 0 &&\n            <Link  to=\"main\" spy={false} smooth={true}>\n              <NextPrevPageButtons {...this.state} handleLoadMore={this.handleLoadMore}/>\n            </Link>\n          }\n        </main>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SimpleReactLightbox from 'simple-react-lightbox'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleReactLightbox>\n      <App />\n    </SimpleReactLightbox>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}